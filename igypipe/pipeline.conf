# IgY-Pipe configuration

# One of 'human', 'mouse', 'rhesus_monkey'. The appropriate database files must
# also exist! For example, for rhesus_monkey, the file
# database/rhesus_monkey_V.fasta and the corresponding files for _D and _J must
# exist.
species = 'rhesus_monkey'


# How many iterations to run the pipeline when discovering new V genes.
iterations = 1


# Filter out reads that have more than this number of expected errors.
# Set to None to disable.
maximum_expected_errors = None
# maximum_expected_errors = 5


# Filter out merged reads that are shorter than this length.
minimum_merged_read_length = 300


# Length of the random barcode sequence, assumed to be in the beginning of each
# sequence. Set to 0 when you have no random barcode.
barcode_length = 12

# Primer sequence settings

# Whether to trim primers at all. Can be set to True or False.
# If set to False, the primer sequences below are ignored!
trim_primers = False

# Do not reverse-complement any of the sequences! The pipeline will do that for
# you and search for the correct primer pairs in both orientations.

race_primers = [
	'CCGACGNNNNNCGTGAGCTGAGTACGACTCACTATAGCTTC',  # 5' RACE
]

# 5' primer mix
primer_mix = [
	'AGCTACAGAGTCCCAGGTCCA',
	'ACAGGYGCCCACTCYSAG',
	'TTGCTMTTTTAARAGGTGTCCAGTGTG',
	'CTCCCAGATGGGTCCTGTC',
	'ACCGTCCYGGGTCTTGTC'
	'CTGTTCTCCAAGGGWGTCTSTG',
	'CATGGGGTGTCCTGTCACA'
]

# Select which of the above primers to use: either race_primers or mix_primers
forward_primers = race_primers
# forward_primers = primer_mix

reverse_primers = [
	'GCAGGCCTTTTTGGCCNNNNNGCCGATGGGCCCTTGGTGGAGGCTGA',  # IgG
	#'GCAGGCCTTTTTGGCCNNNNNGGGGCATTCTCACAGGAGACGAGGGGGAAAAG'  # IgM
]


# Work only on this number of reads (for quick test runs). Set to None to
# process all reads.

# limit = None


## Advanced settings (usually do not need to be changed)


# Read merging program. Choose either 'pear' or 'flash'.
# pear merges more reads, but is slower.

# merge_program = 'pear'


# Which program to use for computing multiple alignments. This is used for
# computing consens sequences.
# Choose 'mafft', 'clustalo', 'muscle' or 'muscle-fast'.
# 'muscle-fast' runs muscle with parameters "-maxiters 1 -diags".

# multialign_program = 'muscle-fast'


# Maximum overlap (-M) for the flash read merger.
# If you use pear, this is ignored.

# flash_maximum_overlap = 300


# When clustering sequences to discover new genes, subsample to this number of
# sequences. Higher is slower.

# subsample = 1000


# Which program to use for clustering. Use vsearch or usearch (can also be an
# absolute path).

# cluster_program = 'vsearch'


# kate: syntax Python;
