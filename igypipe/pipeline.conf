# Pipeline configuration file.

# One of 'human', 'mouse', 'rhesus_monkey'. The appropriate database files must also exist!
# For example, for rhesus_monkey, the file database/rhesus_monkey_V.fasta (and _D
# and _J) must be there.
species = 'rhesus_monkey'

# How often to run the pipeline in order to discover more and more V gene
# sequences in each round.
iterations = 1

# Filter out reads that have more than this number of expected errors.
# Set to None to disable.
maximum_expected_errors = None
# maximum_expected_errors = 5

# Filter out merged reads that are shorter than this length.
minimum_merged_read_length = 300

# Length of the random barcode sequence, assumed to be in the beginning of each
# sequence. Set to 0 when you have no random barcode.
barcode_length = 12

# Primer sequences.
# Do not reverse-complement any of the sequences! The pipeline will do that for
# you and search for the correct primer pairs in both orientations.

race_primers = [
	'CCGACGNNNNNCGTGAGCTGAGTACGACTCACTATAGCTTC',  # 5' RACE
]

# 5' primer mix
primer_mix = [
	'AGCTACAGAGTCCCAGGTCCA',
	'ACAGGYGCCCACTCYSAG',
	'TTGCTMTTTTAARAGGTGTCCAGTGTG',
	'CTCCCAGATGGGTCCTGTC',
	'ACCGTCCYGGGTCTTGTC'
	'CTGTTCTCCAAGGGWGTCTSTG',
	'CATGGGGTGTCCTGTCACA'
]

# Select which of the above primers to use: either race_primers or mix_primers
forward_primers = race_primers
# forward_primers = primer_mix

reverse_primers = [
	'GCAGGCCTTTTTGGCCNNNNNGCCGATGGGCCCTTGGTGGAGGCTGA',  # IgG
	#'GCAGGCCTTTTTGGCCNNNNNGGGGCATTCTCACAGGAGACGAGGGGGAAAAG'  # IgM
]

# Whether to trim primers. Can be set to True or False.
# If set to False, the primer sequences above are ignored!
trim_primers = False

# Which program to use for clustering. This can be either a path to the
# usearch binary or vsearch.
cluster_program = 'vsearch'
# cluster_program = 'usearch7.0.1001_i86linux64'

# Which program to use for computing multiple alignments. This is used to find
# the consensus of all sequences that have identical barcode, V- and
# J assignment. Can be 'mafft', 'clustalo', 'muscle' or 'muscle-fast'.
# Default: 'muscle-fast' (runs muscle with parameters -maxiters 1 -diags).
multialign_program = 'muscle-fast'

# Limit IgBLAST processing to this number of reads. Set to None to process all.
limit = None
# limit = 1000


# Advanced settings


# either 'pear' or 'flash'. pear merges more reads, but is slower.
merge_program = 'pear'

# Maximum overlap (-M) for the flash read merger.
# If you use pear, this is ignored.
flash_maximum_overlap = 300

# kate: syntax Python;
